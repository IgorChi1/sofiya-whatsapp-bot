#!/usr/bin/env node

/**
 * ÍßÅ‡º∫ ùì¢ùì∏ùìØùì≤ùîÇùì™ ‡ºªÍßÇ WhatsApp Bot
 * –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –º–æ–¥–µ—Ä–∞—Ü–∏–∏ —Å –∞—Ä–µ–Ω–¥–æ–π
 * –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è Termux
 * 
 * @version 1.0.0
 * @author Sofiya Bot Team
 */

const fs = require('fs-extra');
const path = require('path');
const chalk = require('chalk');
const figlet = require('figlet');
const moment = require('moment');

// –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π
const SofiyaBot = require('./src/core/bot');
const Logger = require('./src/utils/logger');
const Database = require('./src/core/database');

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const config = require('./config.json');
const logger = new Logger('MAIN');

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
 */
async function createDirectories() {
    const dirs = [
        'database',
        'logs', 
        'sessions',
        'src/core',
        'src/handlers',
        'src/plugins',
        'src/utils',
        'src/commands'
    ];

    for (const dir of dirs) {
        await fs.ensureDir(dir);
    }
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
 */
async function initializeDatabase() {
    const db = new Database();
    await db.initialize();
    
    // –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö JSON —Ñ–∞–π–ª–æ–≤ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
    const dbFiles = {
        'database/groups.json': {},
        'database/users.json': {},
        'database/rentals.json': {},
        'database/settings.json': {},
        'database/activity.json': {}
    };

    for (const [file, defaultContent] of Object.entries(dbFiles)) {
        if (!await fs.pathExists(file)) {
            await fs.writeJson(file, defaultContent, { spaces: 2 });
        }
    }
}

/**
 * –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ª–æ–≥–æ—Ç–∏–ø–∞ –±–æ—Ç–∞
 */
function displayLogo() {
    console.clear();
    
    const logo = figlet.textSync('SOFIYA', {
        font: 'Big',
        horizontalLayout: 'default',
        verticalLayout: 'default'
    });

    console.log(chalk.magenta.bold(logo));
    console.log(chalk.cyan('‚îÅ'.repeat(60)));
    console.log(chalk.yellow.bold(`  ÍßÅ‡º∫ ùì¢ùì∏ùìØùì≤ùîÇùì™ ‡ºªÍßÇ WhatsApp Bot v${config.bot.version}`));
    console.log(chalk.cyan('‚îÅ'.repeat(60)));
    console.log(chalk.green(`  üì± –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: Termux Optimized`));
    console.log(chalk.green(`  üë• –ú–∞–∫—Å–∏–º—É–º –≥—Ä—É–ø–ø: ${config.limits.maxGroups}`));
    console.log(chalk.green(`  üí∞ –°–∏—Å—Ç–µ–º–∞ –∞—Ä–µ–Ω–¥—ã: ${config.rental.enabled ? '–ê–∫—Ç–∏–≤–Ω–∞' : '–û—Ç–∫–ª—é—á–µ–Ω–∞'}`));
    console.log(chalk.green(`  üïê –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: ${moment().format('DD.MM.YYYY HH:mm:ss')}`));
    console.log(chalk.cyan('‚îÅ'.repeat(60)));
    console.log();
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞
 */
function setupErrorHandlers() {
    process.on('unhandledRejection', (reason, promise) => {
        logger.error('Unhandled Rejection:', reason);
        console.log(chalk.red('üö® –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ Promise:', reason));
    });

    process.on('uncaughtException', (error) => {
        logger.error('Uncaught Exception:', error);
        console.log(chalk.red('üö® –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ:', error.message));
        process.exit(1);
    });

    process.on('SIGINT', async () => {
        console.log(chalk.yellow('\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...'));
        logger.info('Bot shutdown initiated');
        process.exit(0);
    });
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞
 */
async function main() {
    try {
        // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ª–æ–≥–æ—Ç–∏–ø–∞
        displayLogo();

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –æ—à–∏–±–æ–∫
        setupErrorHandlers();

        console.log(chalk.blue('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã...'));
        
        // –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
        await createDirectories();
        console.log(chalk.green('‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã'));

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        await initializeDatabase();
        console.log(chalk.green('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞'));

        // –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
        console.log(chalk.blue('ü§ñ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...'));
        const bot = new SofiyaBot(config);
        await bot.start();

        console.log(chalk.green.bold('üöÄ –ë–æ—Ç ÍßÅ‡º∫ ùì¢ùì∏ùìØùì≤ùîÇùì™ ‡ºªÍßÇ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!'));
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞
        if (config.limits.autoRestartHours > 0) {
            setTimeout(() => {
                console.log(chalk.yellow('üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫...'));
                process.exit(0);
            }, config.limits.autoRestartHours * 60 * 60 * 1000);
        }

    } catch (error) {
        logger.error('Startup error:', error);
        console.log(chalk.red('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞:', error.message));
        process.exit(1);
    }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
main(); 